query ($deptId: ID!) {
  allModels {
    _prodsMeta (filter: {
      dept: {
        id: $deptId
      }
    }) {
     count
    }
    id
    name
  }
}

query ($deptId: ID!) {
  allModels(filter: {
    prods_some: {
      dept: {
        id: $deptId
      }
    }
  }) {
    id
    name
  }
}

query {
  allDepts {
    _prodsMeta {
     count
    }
    id
    name
  }
}

https://github.com/graphcool/framework/issues/40
query {
  slowlife: allGenres(filter: {key: SLOW_LIFE}) {
    _vinylsMeta {
			count
    }
    key
  }

  timelink: allGenres(filter: {key: TIMELINK}) {
    _vinylsMeta {
			count
    }
    key
  }
}


-----------------------------------------------------------------------
https://www.graph.cool/forum/t/mutation-inside-a-graphcool-function/239
var mutation = `
	mutation {
		createTagging (
			tags: "${tagsToCreate}",
			userId: "${fakeUserId}
		) {
			id
		}
	}
`
return fetch(API, {
      method: 'post',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ mutation })
}).then((response) => {
	return response.json()
}).then((data) => {
	console.log(data)
	return event
}).catch((err) => {
	console.log(err)
})

-----------------------------------------------------------------------
https://www.graph.cool/docs/reference/graphql-api/overview-abogasd0go/
const { request } = require('graphql-request')

module.exports = function (event) {
  console.log('Received event')
  console.log(event.data)

  const mutation = `{
    createDeptModel(
      deptId: "cjbuuv9ka4s3l0162qzn4zy5x",
      modelId: "cjc0d2ck96c4s0147y9zppoty",
      prodCount: 1
    ) {
      id
    }
  }`

  console.log('Mutation data')
  request('https://api.graph.cool/simple/v1/cjbuug4g90oz80127p4yshxxf', mutation).then(data => console.log(data))

}

!!!!!WORKING IN RESOLVERS _-----------------------------------------------------
var fetch = require("isomorphic-fetch")

module.exports = function (event) {

  var query = `
    query {
      allDeptModels {
        id
		dept {
			id
		}
		model {
			id
		}
      }
    }
  `
  return fetch('https://api.graph.cool/simple/v1/cjbuug4g90oz80127p4yshxxf', {
        method: 'post',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': ''
        },
        body: JSON.stringify({ query: query })
  }).then((response) => {
      return response.json()
  }).then((data) => {
      console.log(data)
      return event
  }).catch((err) => {
      console.log(err)
  })
}
